name: Monitor and Release Builds

on:
  schedule:
    - cron: '*/30 * * * *' # Runs every 30 minutes
  workflow_dispatch:

jobs:
  monitor-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: '.'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Node dependencies
        run: npm install axios
        working-directory: .

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-api-python-client google-auth google-auth-oauthlib google-auth-httplib2 requests packaging
        working-directory: .

      - name: Fetch Commit Logs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}
        run: |
          node -e "require('./scripts/monitorAndRelease.js').getCommitLogsFromSendMessage(null, null).then(logs => console.log('Commit Logs:\n' + logs)).catch(err => console.error(err));"
        working-directory: .

      - name: Monitor External Repo and Process Builds
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SERVICE_ACCOUNT_JSON: ${{ secrets.SERVICE_ACCOUNT_JSON }}
        run: node scripts/monitorAndRelease.js
        working-directory: .

      - name: Commit last processed commit SHA
        run: |
          git config --global user.name 'itsmechinmoy'
          git config --global user.email '167056923+itsmechinmoy@users.noreply.github.com'
          git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/itsmechinmoy/dartotsu-updater.git
          git add last_processed_commit.txt
          if ! git diff --cached --quiet; then
            git commit -m "Update last processed commit SHA"
            git push origin main
          else
            echo "No changes to commit for last_processed_commit.txt"
          fi
        working-directory: .
        if: always()
